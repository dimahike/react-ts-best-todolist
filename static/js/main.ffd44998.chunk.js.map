{"version":3,"sources":["utils/validators.ts","sortTodo.ts","components/HamburgerMenu.tsx","components/HeaderStates.tsx","components/Header.tsx","redux/actions/sortList.ts","redux/typeActions.ts","redux/actions/todolist.ts","components/ReduxFormInput/index.ts","components/ReduxFormInput/ReduxFormInput.tsx","components/shared/Button.tsx","components/NewTask.tsx","components/State.tsx","components/Todo.tsx","components/TodoList.tsx","components/Home.tsx","components/Footer.tsx","App.tsx","redux/reducers/todolist.ts","DB.ts","redux/reducers/sortList.ts","redux/reducers/index.ts","redux/store.ts","redux/loadState.js","index.tsx"],"names":["min","sortTodo","HamburgerMenu","children","autocCloseHamburger","React","useState","stateHamb","setStateHamb","useEffect","OpenCloseHumburger","style","width","id","className","onClick","fontSize","cursor","HeaderStates","memo","activeState","onClickState","console","log","map","item","index","key","state","Header","dispatch","useDispatch","useSelector","sortList","indexState","type","payload","addTodo","todo","required","value","undefined","maxLength","max","length","maxLength30","maxLength200","minLength3","ReduxFormInput","input","label","typeText","placeholder","inputClassName","meta","touched","error","warning","name","htmlFor","Button","onclick","form","reduxForm","handleSubmit","reset","activeCalender","setactiveCalender","today","Date","toJSON","slice","replace","onHandleClick","onSubmit","data","randomNumber","Math","random","toFixed","newId","Number","toDate","newTodo","task","newtask","decription","description","date","from","to","Field","component","validate","display","connect","State","stateFromSelecter","sortRef","useRef","visibleState","setVisibleState","returnData","handleOutsideClick","event","path","composedPath","target","includes","current","document","body","addEventListener","ref","indexActiveItem","onSelectItem","Todo","visibleDescription","setVisibleDescription","refTodo","button","getElementsByTagName","getElementsByClassName","contains","height","viewBox","fill","xmlns","d","Todolist","todolist","Home","filteredTodolist","filter","TodoList","Footer","year","getFullYear","App","exact","initialState","action","findIndex","newTodolist","rootReducer","combineReducers","formReducer","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","subscribe","stringify","setItem","saveState","getState","rootElement","getElementById","render"],"mappings":"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","file":"static/js/main.ffd44998.chunk.js","sourcesContent":["export const required = (value: any) => (value || typeof value === 'number' ? undefined : 'Required');\r\nconst maxLength = (max: number) => (value: any) =>\r\n  value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\nexport const maxLength30 = maxLength(30);\r\nexport const maxLength200 = maxLength(200);\r\nconst minLength = (min: number) => (value: any) =>\r\n  value && value.length < min ? `Must be ${min} characters or more` : undefined;\r\nexport const minLength3 = minLength(3);\r\n","export const sortTodo: string[] = ['all', 'processing', 'delay', 'ready', 'cancel'];","import React, { useEffect } from 'react';\r\n\r\nimport './hamburgerMenu.scss';\r\n\r\ntype Props = {\r\n  children: any;\r\n  autocCloseHamburger?: number;\r\n};\r\n\r\nconst HamburgerMenu: React.FC<Props> = ({ children, autocCloseHamburger }) => {\r\n  const [stateHamb, setStateHamb] = React.useState(false);\r\n  useEffect(() => {\r\n    setStateHamb(false);\r\n  }, [autocCloseHamburger]);\r\n\r\n  const OpenCloseHumburger = () => {\r\n    setStateHamb(!stateHamb);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ width: stateHamb ? '100%' : 0 }} id=\"myNav\" className=\"overlay\">\r\n        <p className=\"closebtn\" onClick={OpenCloseHumburger}>\r\n          &times;\r\n        </p>\r\n        <div className=\"overlay-content\">{children}</div>\r\n      </div>\r\n\r\n      <span onClick={OpenCloseHumburger} style={{ fontSize: '22px', cursor: 'pointer' }}>\r\n        &#9776;\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HamburgerMenu;\r\n","import React from 'react';\r\nimport { sortTodo } from '../sortTodo';\r\n\r\nimport HamburgerMenu from './HamburgerMenu';\r\nimport './headerStates.scss';\r\n\r\nconst HeaderStates = React.memo(function HeaderStates({ activeState, onClickState }: any) {\r\n  console.log('activeState from  HeaderStates', activeState);\r\n\r\n  // const onClickHamState = () => {\r\n  //   console.log('onClickHamState');\r\n  // };\r\n  return (\r\n    <>\r\n      <ul className=\"option-list\">\r\n        {sortTodo.map((item: string, index: number) => (\r\n          <li\r\n            onClick={() => onClickState(index)}\r\n            key={item}\r\n            className={`option ${activeState === index ? 'active' : ''}`}>\r\n            {item}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <div className=\"hamburger\">\r\n        <HamburgerMenu autocCloseHamburger={activeState}>\r\n          {sortTodo.map((state, index) => (\r\n            <p\r\n              className={activeState === index ? 'active-selecte-humburger' : ''}\r\n              onClick={() => onClickState(index)}\r\n              key={`p_${state}_${index}`}>\r\n              {state}\r\n            </p>\r\n          ))}\r\n        </HamburgerMenu>\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default HeaderStates;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { sortByState } from '../redux/actions/sortList';\r\nimport './header.scss';\r\nimport HeaderStates from './HeaderStates';\r\n\r\nexport const Header: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector(({ sortList }: any) => sortList.state);\r\n\r\n  console.log('state from header', state);\r\n\r\n  const onClickHandleActiveState = (indexState: number) => {\r\n    console.log('click state from Header', indexState);\r\n    dispatch(sortByState(indexState));\r\n  };\r\n\r\n  return (\r\n    <div id=\"header\">\r\n      <div className=\"left\">\r\n        <div className=\"header__logo\">\r\n          <i className=\"far fa-list-alt\"></i>\r\n          <p className=\"logo-text\">TODO LIST</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"right\">\r\n        <HeaderStates activeState={state} onClickState={onClickHandleActiveState} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { SORT_BY_STATE } from \"../typeActions\";\r\n\r\nexport const sortByState = (todo: number) => ({\r\n  type: SORT_BY_STATE,\r\n  payload: todo\r\n})\r\n","export const ADD_TODOLIST: string = 'ADD_TODOLIST'\r\nexport const ADD_TODO: string = 'ADD_TODO';\r\nexport const UPDATE_STATE: string = 'UPDATE_STATE';\r\nexport const REMOVE_TODO: string = 'REMOVE_TODO';\r\nexport const SORT_BY_STATE: string = 'SORT_BY_STATE';","import { ADD_TODO, UPDATE_STATE, REMOVE_TODO } from '../typeActions'\r\n\r\nexport const addTodo = (todo?: TodoType) => ({\r\n  type: ADD_TODO,\r\n  payload: todo\r\n})\r\n\r\nexport const updateState = (newState: any) => ({\r\n  type: UPDATE_STATE,\r\n  payload: newState\r\n})\r\n\r\nexport const removeTodo = (id: number) => ({\r\n  type: REMOVE_TODO,\r\n  payload: id\r\n})\r\n\r\n\r\n","import ReduxFormInput from './ReduxFormInput';\nexport default ReduxFormInput;","import React from 'react';\n\nimport './reduxFormInput.scss';\n\ntype InputType = {\n  name: string;\n  onBlur: any;\n  onChange: any;\n  onDragStart: any;\n  onDrop: any;\n  onFocus: any;\n  value: string;\n  inputClassName?: string | undefined;\n  label: string;\n};\n\ntype PropsType = {\n  input: InputType;\n  label: string;\n  type?: string;\n  typeText: 'textarea' | 'text';\n  className: string;\n  placeholder: string;\n  inputClassName: string;\n  meta: { touched: boolean; error: any; warning: any };\n};\n\nconst ReduxFormInput: React.FC<PropsType> = ({\n  input,\n  label,\n  type,\n  typeText,\n  className,\n  placeholder,\n  inputClassName,\n  meta: { touched, error, warning },\n}) => {\n  return (\n    <div className={`field ${className}`}>\n      {typeText === 'text' && (\n        <input\n          {...input}\n          className={`text-field ${inputClassName ? inputClassName : ''}`}\n          id={input.name}\n          type={type}\n          placeholder={placeholder}\n        />\n      )}\n      {typeText === 'textarea' && (\n        <textarea\n          className={`textarea-field ${inputClassName ? inputClassName : ''}`}\n          {...input}\n          id={input.name}\n          // type={type}\n          placeholder={placeholder}\n        />\n      )}\n      <label className=\"label\" htmlFor={input.name}>\n        {label}\n      </label>\n      {touched &&\n        ((error && (\n          <span className=\"text-danger\">\n            <i className=\"fas fa-exclamation-circle\"></i>\n            {error}\n          </span>\n        )) ||\n          (warning && (\n            <span className=\"text-danger\">\n              <i className=\"fas fa-exclamation-circle\"></i>\n              {warning}\n            </span>\n          )))}\n    </div>\n  );\n};\n\nexport default ReduxFormInput;\n","import React from 'react';\r\n\r\nimport './button.scss';\r\n\r\ntype Props = {\r\n  name: string;\r\n  type?: 'button' | 'submit' | 'reset' | undefined;\r\n  className?: string;\r\n  onclick?: (event: any) => void;\r\n};\r\n\r\nexport const Button: React.FC<Props> = ({ name, type, className, onclick }) => {\r\n  return (\r\n    <button type={type} onClick={onclick} className={`${className ? className : ''}`}>\r\n      {name}\r\n    </button>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\r\nimport { addTodo } from '../redux/actions/todolist';\r\nimport { maxLength200, maxLength30, minLength3, required } from '../utils/validators';\r\n\r\nimport './newtask.scss';\r\nimport ReduxFormInput from './ReduxFormInput';\r\nimport { Button } from './shared/Button';\r\n\r\ninterface Props {}\r\n\r\nconst NewTask: React.FC<Props & InjectedFormProps<{}, Props>> = ({ handleSubmit, reset }: any) => {\r\n  const dispatch = useDispatch();\r\n  const [activeCalender, setactiveCalender] = React.useState<boolean>(false);\r\n\r\n  let today = new Date().toJSON().slice(0, 10).replace(/-/g, '.');\r\n  const onHandleClick = () => {\r\n    console.log('onclick');\r\n\r\n    setactiveCalender(!activeCalender);\r\n  };\r\n\r\n  const submitAddTodo = (data: SubmitAddTodoType) => {\r\n    const randomNumber = (Math.random() * 1e8).toFixed(0);\r\n    const newId = Number(randomNumber);\r\n    console.log('data', data);\r\n\r\n    let toDate = null;\r\n\r\n    if (data.toDate) {\r\n      toDate = data.toDate.replace(/-/g, '.');\r\n    }\r\n\r\n    const newTodo: TodoType = {\r\n      id: newId,\r\n      task: data.newtask,\r\n      decription: data.description,\r\n      date: {\r\n        from: today,\r\n        to: toDate,\r\n      },\r\n      state: 1,\r\n    };\r\n\r\n    dispatch(addTodo(newTodo));\r\n    reset();\r\n\r\n    console.log('submit work', data);\r\n  };\r\n  // const selecteState = (selectedState: any) => {\r\n  //   setActiveState(selectedState);\r\n  //   console.log('activeState', selectedState);\r\n  // };\r\n\r\n  return (\r\n    <div id=\"new-task\">\r\n      <form onSubmit={handleSubmit(submitAddTodo)} className=\"form-task\">\r\n        <div className=\"fotm-input\">\r\n          <Field\r\n            typeText=\"text\"\r\n            className=\"inherit-width\"\r\n            name=\"newtask\"\r\n            type=\"text\"\r\n            component={ReduxFormInput}\r\n            label=\"new task\"\r\n            placeholder=\"Enter Task\"\r\n            validate={[required, minLength3, maxLength30]}\r\n          />\r\n\r\n          <div>\r\n            <div className=\"date\">\r\n              <span>From</span>\r\n              <span>{today}</span>\r\n              <span>to</span>\r\n              <span onClick={onHandleClick} className=\"unlimite pointer\">\r\n                {!activeCalender && 'unlimite'}\r\n              </span>\r\n              {activeCalender && (\r\n                <div style={{ display: 'flex' }}>\r\n                  <div className=\"date__calender\">\r\n                    <Field name=\"toDate\" component=\"input\" type=\"date\" />\r\n                  </div>\r\n                  <div onClick={onHandleClick} className=\"return pointer\">\r\n                    <i className=\"fas fa-undo-alt\"></i>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Field\r\n          className=\"inherit-width\"\r\n          typeText=\"textarea\"\r\n          name=\"description\"\r\n          component={ReduxFormInput}\r\n          label=\"Description Task\"\r\n          placeholder=\"Enter Description Task\"\r\n          validate={[minLength3, maxLength200]}\r\n        />\r\n        <div className=\"btn-group\">\r\n          <Button type=\"button\" onclick={reset} className=\"btn btn-danger\" name=\"Clear Task\" />\r\n          <Button type=\"submit\" className=\"btn btn-green\" name=\"Add Task\" />\r\n        </div>\r\n        {/* <div className=\"bottom\">\r\n          <State state={activeState} stateFromSelecter={selecteState} />\r\n        </div> */}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst form = reduxForm<{}, Props>({\r\n  // a unique name for the form\r\n  form: 'new-task',\r\n})(NewTask);\r\n\r\nexport default connect(null)(form);\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateState } from '../redux/actions/todolist';\r\nimport { sortTodo } from '../sortTodo';\r\n\r\nimport './state.scss';\r\n\r\ntype PropsType = {\r\n  state: number;\r\n  id?: number;\r\n  stateFromSelecter?: any;\r\n};\r\n\r\nexport const State: React.FC<PropsType> = ({ state, id, stateFromSelecter }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const sortRef = React.useRef() as React.MutableRefObject<HTMLInputElement>;\r\n  const [visibleState, setVisibleState] = React.useState<boolean>(false);\r\n  const toggleVisibleState = () => {\r\n    setVisibleState(!visibleState);\r\n  };\r\n\r\n  const onSelectItem = (indexActiveItem: number) => {\r\n    if (id) {\r\n      const date = {\r\n        id: id,\r\n        state: indexActiveItem + 1,\r\n      };\r\n      dispatch(updateState(date));\r\n    }\r\n\r\n    if (id === undefined) {\r\n      returnData(indexActiveItem + 1);\r\n      state = indexActiveItem;\r\n    }\r\n\r\n    setVisibleState(false);\r\n  };\r\n\r\n  const returnData = (data: any) => {\r\n    stateFromSelecter(data);\r\n  };\r\n\r\n  const handleOutsideClick = (event: any) => {\r\n    const path =\r\n      event.path ||\r\n      (event.composedPath && event.composedPath()) ||\r\n      event.composedPath(event.target);\r\n    if (!path.includes(sortRef.current)) {\r\n      setVisibleState(false);\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    document.body.addEventListener('click', handleOutsideClick);\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={sortRef} className={`state ${sortTodo[state]}`}>\r\n      <div className=\"sort-state\" onClick={toggleVisibleState}>\r\n        {!visibleState && <span className={`active-state `}>{sortTodo[state]}</span>}\r\n        {visibleState && (\r\n          <div className={`select-state ${sortTodo[state]}`}>\r\n            <ul>\r\n              {sortTodo.slice(1).map((item, index) => {\r\n                return (\r\n                  <li\r\n                    key={`${item}_${index}`}\r\n                    onClick={() => onSelectItem(index)}\r\n                    // onMouseOver={onHandleMouseOver(index)}\r\n                    // onMouseOut={onHandleMouseOut}\r\n                    className={`li-${item} ${state === index + 1 ? 'active' : ''}`}>\r\n                    {item}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeTodo } from '../redux/actions/todolist';\r\n\r\nimport { Button } from './shared/Button';\r\nimport { State } from './State';\r\nimport './todo.scss';\r\n\r\ntype PropsType = {\r\n  todo: TodoType;\r\n};\r\n\r\nconst Todo: React.FC<PropsType> = ({ todo }) => {\r\n  const dispatch = useDispatch();\r\n  const [visibleDescription, setVisibleDescription] = React.useState<boolean>(false);\r\n  console.log('todo from Todo', todo);\r\n\r\n  const refTodo = React.useRef() as React.MutableRefObject<HTMLDivElement>;\r\n\r\n  const onHandleVisibilityDescrip = (event: any) => {\r\n    const path = event.target;\r\n\r\n    const button = refTodo.current.getElementsByTagName('button')[0];\r\n    const state = refTodo.current.getElementsByClassName('state')[0];\r\n\r\n    if (refTodo.current.contains(path)) {\r\n      if (button.contains(path) || state.contains(path)) {\r\n        return;\r\n        // console.log('onClick button or class state');\r\n      } else {\r\n        console.log('onClick on class todo next');\r\n        setVisibleDescription(!visibleDescription);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onHandleDeleteTodo = () => {\r\n    dispatch(removeTodo(todo.id));\r\n    console.log('onHandleDeleteTodo');\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <div ref={refTodo} onClick={onHandleVisibilityDescrip} className=\" flex just-c-bs align-i-c \">\r\n        <div className=\"main\">\r\n          <div className=\"left\">\r\n            <div className={`primordial ${visibleDescription ? 'rotared' : ''}`}>\r\n              <svg\r\n                width=\"10\"\r\n                height=\"6\"\r\n                viewBox=\"0 0 10 6\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                  d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n                  fill=\"#2C2C2C\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <State state={todo.state} id={todo.id} />\r\n          </div>\r\n          <div className=\"right\">\r\n            <p className=\"task\">{todo.task}</p>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Button onclick={onHandleDeleteTodo} name=\"delete\" className=\"btn-sm btn-danger\" />\r\n        </div>\r\n      </div>\r\n\r\n      {visibleDescription && (\r\n        <div className=\"extra\">\r\n          <p className=\"decription\">{todo.decription}</p>\r\n          <p className=\"date\">\r\n            <span>From {todo.date.from}</span>\r\n            {todo.date.to === null ? '' : <span> to {todo.date.to}</span>}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from 'react';\r\n// import { todoListDB } from '../DB';\r\nimport Todo from './Todo';\r\n\r\nimport './todolist.scss';\r\n\r\ntype PropsType = {\r\n  todolist: TodoListType;\r\n};\r\n\r\nconst Todolist: React.FC<PropsType> = ({ todolist }) => {\r\n  console.log('from todolist', todolist);\r\n\r\n  return (\r\n    <div id=\"todo-list\">\r\n      {todolist.map((todo) => (\r\n        <Todo key={`todo_${todo.id}`} todo={todo} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todolist;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addTodo } from '../redux/actions/todolist';\r\n\r\nimport './home.scss';\r\nimport NewTask from './NewTask';\r\nimport TodoList from './TodoList';\r\n\r\nexport const Home: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const todolist = useSelector(({ todolist }: any) => todolist);\r\n  const state = useSelector(({ sortList }: any) => sortList.state);\r\n\r\n  const filteredTodolist = todolist.filter((todo: TodoType) => {\r\n    if (state === 0) {\r\n      return todo.state !== state;\r\n    } else {\r\n      return todo.state === state;\r\n    }\r\n  });\r\n\r\n  console.log('filteredTodolist', filteredTodolist);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(addTodo());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"paper\">\r\n      <div id=\"home\">\r\n        <h2 className=\"home-header\">Add New Task</h2>\r\n        <NewTask />\r\n        <h2 className=\"home-header\">Your Tasks</h2>\r\n        <TodoList todolist={filteredTodolist} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport './footer.scss';\r\n\r\nexport const Footer: React.FC = () => {\r\n  const year = new Date().getFullYear();\r\n  return (\r\n    <div id=\"footer\">\r\n      <div className=\"contacts\">\r\n        <h3>Connect With Me </h3>\r\n        <div className=\"social-links-footer\">\r\n          <span>\r\n            <i className=\"fab fa-github\"></i>\r\n          </span>\r\n          <span>\r\n            <i className=\"fab fa-linkedin-in\"></i>\r\n          </span>\r\n          <span>\r\n            <i className=\"fab fa-telegram-plane\"></i>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <p className=\"copyright\">© Copyright Simple Store, {year}</p>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { Home } from './components/Home';\n\nimport './app.scss';\nimport { Footer } from './components/Footer';\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Header />\n      <div className=\"wrapper\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import { todoListDB } from \"../../DB\";\r\nimport { ADD_TODO, REMOVE_TODO, UPDATE_STATE } from \"../typeActions\";\r\n\r\nconst initialState: TodoListType = todoListDB;\r\n\r\nconst todolist = (state = initialState, action: { type: string, payload: any }) => {\r\n  switch (action.type) {\r\n    case ADD_TODO: {\r\n      if (action.payload === undefined) {\r\n        return [\r\n          ...state\r\n        ]\r\n      }\r\n      return [\r\n        ...state,\r\n        action.payload\r\n      ]\r\n    }\r\n    case UPDATE_STATE: {\r\n      const findIndex = state.findIndex(item => item.id === action.payload.id);\r\n      state[findIndex].state = action.payload.state;\r\n\r\n      return [...state]\r\n    }\r\n    case REMOVE_TODO: {\r\n      const newTodolist = state.filter((item: TodoType) => item.id !== action.payload)\r\n      return newTodolist;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default todolist;","export const todoListDB: TodoListType = [\r\n  {\r\n    id: 1,\r\n    task: 'Buy shoes',\r\n    decription: 'Blue shoes next to supermarket',\r\n    date: {\r\n      from: '19.10.2020',\r\n      to: null,\r\n    },\r\n    state: 1,\r\n  },\r\n  {\r\n    id: 2,\r\n    task: 'Study Chinese',\r\n    decription: 'Buy books and download app',\r\n    date: {\r\n      from: '19.10.2020',\r\n      to: '19.12.2020',\r\n    },\r\n    state: 2,\r\n  },\r\n  {\r\n    id: 3,\r\n    task: 'Buy shoes',\r\n    decription: 'Blue shoes next to supermarket',\r\n    date: {\r\n      from: '12.8.2020',\r\n      to: null,\r\n    },\r\n    state: 4,\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    task: 'Buy shoes',\r\n    decription: 'Blue shoes next to supermarket',\r\n    date: {\r\n      from: '19.8.2020',\r\n      to: '10.10.2020',\r\n    },\r\n    state: 3,\r\n  },\r\n];","import { SORT_BY_STATE } from \"../typeActions\";\r\n\r\nconst initialState: InitialSortListType = {\r\n  state: 0\r\n};\r\n\r\nconst sortList = (state = initialState, action: { type: string, payload: any }) => {\r\n  switch (action.type) {\r\n\r\n\r\n    case SORT_BY_STATE: {\r\n\r\n      return { state: action.payload }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default sortList;","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport todolist from './todolist'\r\nimport sortList from './sortList'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n  todolist,\r\n  sortList,\r\n  form: formReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from './reducers';\r\nimport { loadState, saveState } from './loadState';\r\n\r\nconst persistedState = loadState();\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, persistedState, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nstore.subscribe(() => {\r\n  saveState(store.getState());\r\n});\r\n\r\nexport default store;\r\n\r\n\r\n// const store: Store<ArticleState, ArticleAction> & {\r\n//   dispatch: DispatchType;\r\n// } = createStore(reducer, applyMiddleware(thunk));\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n    //Ignore write errors.\r\n  }\r\n};\r\n","import * as React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n// import { createStore, applyMiddleware, Store } from 'redux';\n// import thunk from 'redux-thunk';\n\nimport App from './App';\nimport store from './redux/store';\n\nconst rootElement = document.getElementById('root');\n\nrender(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  rootElement,\n);\n"],"sourceRoot":""}